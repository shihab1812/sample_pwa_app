{"version":3,"sources":["sw-backup.js"],"names":["cacheName","staticAssets","self","addEventListener","caches","open","cache","addAll","event","waitUntil","clients","claim","request","url","URL","origin","location","respondWith","cacheFirst","networkFirst","match","cachedResponse","fetch","dynamicCache","networkResponse","put","clone","alert"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAG,SAAlB;AAEA,IAAMC,YAAY,GAAG,CACpB,IADoB,EAEpB,oBAFoB,EAGpB,qBAHoB,EAIpB,0BAJoB,EAKpB,yBALoB,EAMpB,iCANoB,EAOpB,iCAPoB,EAQpB,wBARoB,CAArB;AAWAC,IAAI,CAACC,gBAAL,CAAsB,SAAtB;AAAA;AAAA;AAAA;AAAA,wBAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACZC,MAAM,CAACC,IAAP,CAAYL,SAAZ,CADY;;AAAA;AAC1BM,UAAAA,KAD0B;AAEhCA,UAAAA,KAAK,CAACC,MAAN,CAAaN,YAAb;;AAFgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjC;AAKAC,IAAI,CAACC,gBAAL,CAAsB,UAAtB,EAAkC,UAACK,KAAD,EAAW;AAC5CA,EAAAA,KAAK,CAACC,SAAN,CAAgBP,IAAI,CAACQ,OAAL,CAAaC,KAAb,EAAhB;AACA,CAFD;AAIAT,IAAI,CAACC,gBAAL,CAAsB,OAAtB,EAA+B,UAACK,KAAD,EAAW;AACzC,MAAMI,OAAO,GAAGJ,KAAK,CAACI,OAAtB;AACA,MAAMC,GAAG,GAAG,IAAIC,GAAJ,CAAQF,OAAO,CAACC,GAAhB,CAAZ;;AACA,MAAIA,GAAG,CAACE,MAAJ,KAAeC,QAAQ,CAACD,MAA5B,EAAoC;AACnCP,IAAAA,KAAK,CAACS,WAAN,CAAkBC,UAAU,CAACN,OAAD,CAA5B;AACA,GAFD,MAEO;AACNJ,IAAAA,KAAK,CAACS,WAAN,CAAkBE,YAAY,CAACP,OAAD,CAA9B;AACA;AACD,CARD;;SAUeM;;;;;;;0BAAf,kBAA0BN,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC8BR,MAAM,CAACgB,KAAP,CAAaR,OAAb,CAD9B;;AAAA;AACOS,YAAAA,cADP;AAAA,2BAEQA,cAFR;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAEiCC,KAAK,CAACV,OAAD,CAFtC;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SAKeO;;;;;;;0BAAf,kBAA4BP,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC4BR,MAAM,CAACC,IAAP,CAAY,cAAZ,CAD5B;;AAAA;AACOkB,YAAAA,YADP;AAAA;AAAA;AAAA,mBAGgCD,KAAK,CAACV,OAAD,CAHrC;;AAAA;AAGQY,YAAAA,eAHR;AAIED,YAAAA,YAAY,CAACE,GAAb,CAAiBb,OAAjB,EAA0BY,eAAe,CAACE,KAAhB,EAA1B;AAJF,8CAKSF,eALT;;AAAA;AAAA;AAAA;AAAA;AAAA,mBAO+BD,YAAY,CAACH,KAAb,CAAmBR,OAAnB,CAP/B;;AAAA;AAOQS,YAAAA,cAPR;AAAA,8CAQSA,cAAc,IAAIM,KAAK,CAAC,wBAAD,CARhC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"sw-backup.map","sourceRoot":"..","sourcesContent":["const cacheName = 'news-v1';\n\nconst staticAssets = [\n\t'./',\n\t'./main.af46ece4.js',\n\t'./main.af46ece4.css',\n\t'./bulma.min.9a3deb19.css',\n\t'./bulma.min.9a3deb19.js',\n\t'./manifest.3bb3ee0a.webmanifest',\n\t'./manifest.f032aeb4.webmanifest',\n\t'./manifest.298fe654.js'\n];\n\nself.addEventListener('install', async function() {\n\tconst cache = await caches.open(cacheName);\n\tcache.addAll(staticAssets);\n});\n\nself.addEventListener('activate', (event) => {\n\tevent.waitUntil(self.clients.claim());\n});\n\nself.addEventListener('fetch', (event) => {\n\tconst request = event.request;\n\tconst url = new URL(request.url);\n\tif (url.origin === location.origin) {\n\t\tevent.respondWith(cacheFirst(request));\n\t} else {\n\t\tevent.respondWith(networkFirst(request));\n\t}\n});\n\nasync function cacheFirst(request) {\n\tconst cachedResponse = await caches.match(request);\n\treturn cachedResponse || (await fetch(request));\n}\n\nasync function networkFirst(request) {\n\tconst dynamicCache = await caches.open('news-dynamic');\n\ttry {\n\t\tconst networkResponse = await fetch(request);\n\t\tdynamicCache.put(request, networkResponse.clone());\n\t\treturn networkResponse;\n\t} catch (err) {\n\t\tconst cachedResponse = await dynamicCache.match(request);\n\t\treturn cachedResponse || alert('seems like no internet');\n\t}\n}\n"]}